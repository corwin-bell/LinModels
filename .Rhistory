knitr::opts_chunk$set(echo = TRUE)
install.packages("UsingR")
data("father.son",package="UsingR")
force(father.son)
father.son$sheight.mean()
mean(father.son$sheight)
sheight_list <-father.son$sheight[round(father.son$fheight)==71,]
sheight_list <-father.son$sheight[round(father.son$fheight)==71]
sheight_list <-father.son[father.son$fheight>=71 & father.son$fheight<71.5,father.son$sheight]
sheight_list <-father.son[father.son$fheight>=71 & father.son$fheight<71.5,]
sheight_list <-father.son[father.son$fheight>=71 & father.son$fheight<71.5,"sheight"]
sheight_list
mean(sheight_list)
c(1,2,3,4,5)
X
X = matrix(1:1000,100,10)
View(X)
for i in iterate:
for(i in iterate){
print(i)
}
for(i in iterate){
print(i)
}
x = 1:10
x_merge = cbind(x,x2,x3,x4,x5)
x = 1:10
x2 = x*2
x3 = x*3
x4 = x*4
x5 = x*5
x_merge = cbind(x,x2,x3,x4,x5)
View(x_merge)
x = 1:10
x2 = x*2
x3 = x*3
x4 = x*4
x5 = x*5
x_merge <- cbind(x,x2,x3,x4,x5)
colSums(x_merge)
rowSums(x_merge)
matrix(1:60,20,3)
matrix(1:60,20,3,byrow=TRUE)
X <- matrix(c(1,3,2,1-2,1,1,1,-1),3,3)
X
X <- matrix(c(1,3,2,1-2,1,1,1,-1),3,3)
solve(X)
X <- matrix(c(1,3,2,1-2,1,1,1,-1),3,3)
solve(X)%*%X
X <- matrix(c(1,3,2,1-2,1,1,1,-1),3,3)
y <- matrix(c(6,2,1),3,1)
solve(X)%*%y
X <- matrix(c(1,3,2,1-2,1,1,1,-1),3,3)
y <- matrix(c(6,2,1),3,1)
solve(X)%*%y
X <- matrix(c(3,4,-5,1,2,2,2,-1,1,-1,5,-5,5,0,0,1),4,4)
X <- matrix(c(1,3,2,1-2,1,1,1,-1),3,3,byrow = TRUE)
y <- matrix(c(6,2,1),3,1)
solve(X)%*%y
X <- matrix(c(3,4,-5,1,2,2,2,-1,1,-1,5,-5,5,0,0,1),4,4,byrow = TRUE)
X <- matrix(c(3,4,-5,1,2,2,2,-1,1,-1,5,-5,5,0,0,1),4,4,byrow = TRUE)
y <- matrix(c(10,5,7,4),4,1)
solve(X)%*&y
X <- matrix(c(3,4,-5,1,2,2,2,-1,1,-1,5,-5,5,0,0,1),4,4,byrow = TRUE)
y <- matrix(c(10,5,7,4),4,1)
solve(X)%*%y
a <- matrix(1:12, nrow=4)
b <- matrix(1:15, nrow=3)
View(a)
a <- matrix(1:12, nrow=4)
b <- matrix(1:15, nrow=3)
a%*%b
View(b)
View(a)
a[2]
a[2,]
dot(a[3,],b[,2])
a[3,]*b[,2]
sum(a[3,]*b[,2])
knitr::opts_chunk$set(echo = TRUE)
crossprod(a[3,],b[,2])
x=father.son$fheight
y=father.son$sheight
X <-cbind(1,x)
X
x=father.son$fheight
y=father.son$sheight
X <-cbind(1,x)
betahat <-solve(t(X)%*%X)%*%t(X)%*%y
x=father.son$fheight
y=father.son$sheight
X <-cbind(1,x)
betahat <-solve(t(X)%*%X)%*%t(X)%*%y
betahat
X <- matrix(c(1,1,1,1,0,0,1,1),nrow=4)
rownames(X) <- c("a","a","b","b")
X
beta <- c(5, 2)
crossprod(X,y)
beta <- c(5, 2)
beta
solve(X%*%y)
X[1,]
X[2,]
X[1:2,]
X[1:2,]%*%t(y)
X[1:2,]%*%y
t(X[1:2,]) %*% y
t(X[1:2,]) %*% beta
X[1:2,] %*% beta
X[3:4,] %*% beta
X <- matrix(c(1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,1,1),nrow=6)
rownames(X) <- c("a","a","b","b","c","c")
X
beta <- c(10,3,-3)
X[3:4,]%*%beta
X[5:6,]%*%beta
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt  - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
A
X = cbind(1,tt,tt^2)
X
crossprod(X)
# A = solve(crossprod(X))%*%t(X)
# A
t(X)
# A = solve(crossprod(X))%*%t(X)
# A
a = cbind([1,4],[2,5],[3,6])
a = matrix(c(1,2,3,4,5,6),nrow = 2)
a
a = matrix(c(1,2,3,4,5,6),nrow = 2)
a%*%t(a)
t(a)
a = matrix(c(1,2,3,4,5,6),nrow = 2)
a
a%*%t(a)
t(a)%*%a
solve(crossprod(X))
# A = solve(crossprod(X))%*%t(X)
# A
solve(crossprod(X))%*%X
solve(crossprod(X))%*%crossprod(X)
# A = solve(crossprod(X))%*%t(X)
# A
# A = solve(crossprod(X))%*%t(X)
# A
# A = solve(crossprod(X))%*%t(X)
# A
# A = solve(crossprod(X))%*%t(X)
# A
A = solve(crossprod(X))%*%t(X)
A
y
g_est_dist <- replicate(100000,h0 + v0 *tt  - 0.5* g*tt^2 + rnorm(n,sd=1))
g_est_dist[1:5,]
View(g_est_dist)
View(g_est_dist)
View(g_est_dist)
distance_estimates <- replicate(100000,h0 + v0 *tt  - 0.5* g*tt^2 + rnorm(n,sd=1))
View(g_est_dist)
# estimate of g = -2*A%*%y[3]
g_estimates <- -2*A%*%distance_estimates[3]
-2*A%*%y[3]
y
-2*A%*%y
# estimate of g = -2*A%*%y[3]
g_estimates <- -2*A%*%distance_estimates
View(g_estimates)
sd(g_estimates[3])
g_estimates[3,1:20]
sd(g_estimates[3])
sd(g_estimates[3,])
